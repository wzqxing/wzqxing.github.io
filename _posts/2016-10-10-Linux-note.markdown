---
layout:     post
title:      "Linux学习笔记"
subtitle:   "记忆低能儿，杂乱无章的笔记"
data:       2016-10-11
authori:    "silence"
header-img: "img/post-ubuntu-logo-water-1920x1080.png"
tags:
    - os
    - Linux
    - 笔记



---




## Catagory

1. [目录结构](#section)
2. [bash快捷键](#bash)
3. [常用命令](#section-1)
4. [字符](#section-2)
5. [查找和筛选](#section-3)







## 目录结构


>Linux目录的主要功能

- /bin **普通用户可使用的指令**
- /boot 启动文件
- /dev 设备文件
- /etc 系统和服务设置文件（若要修改，先备份）
- /home 用户目录
- /lib 系统几相关软件依赖的库文件
- /lost+found 若系统意外关机后，损失文件及文件碎片所放置地点。系统重启会自动修复
- /media 挂载光驱U盘等
- /mnt 临时挂载磁盘设备
- /opt 额外和需要编译安装的软件放置处
- /root root 用户目录
- /sbin 系统管理命令
- /tmp 存放系统和进程产生的临时文件
- /user 帮助文件和配置文件及程序
- /var 多类型文件 如日志文件和数据库文件


## bash快捷键


>多用快捷键，特别是手残之人

- Ctrl+B **向前移动光标一个字符**
- Ctrl+F 向后移动光标一个字符
- Ctrl+A **移动光标到行首**
- Ctrl+E 移动光标到行尾

- Ctrl+D 删除光标处字符
- Ctrl+H 删除光标的前一个字符
- Ctrl+U **删除当前光标到行首**
- Ctrl+K 删除当前光标到行尾的所有字符
- Ctrl+L **清屏**


* 绑定快捷键和命令*bind*
  - bind -P 查看以绑定的快捷键

* history 命令行历史
* alias 命令别名功能


## 常用命令

- ls
	- -d显示目录
	- -a显示全部
	- -l显示详细
	- -S文件大小排序
	- -k显示文件大小以k自己为单位
	- -h必须配合l使用，更加直观

>ll(代表ls -l)
-：表示普通文件
d：表示目录
l：表示链接文件
b：表示块文件，通常是磁盘或者分区
c：字符设备文件，通常是键盘、鼠标等
p：管道文件

- ln 文件链接命令
    ln [option] target link_name
    加-s创建软连接（快捷方式），不加创建硬链接（副本）

- touch 创建文件命令
- mkdir 创建目录 -p选项可以同事创建一个路径中多个目录
- mv 移动文件和目录（重命名）
- cp复制文件，复制目录加-R选项
- rm 删除文件目录（-R）**不可恢复**，删除应加-i提示
- file 查看文件类型命令
- cat 查看文件内容
- tail 从文本尾查看文本内容（f选项动态查看，n选项指定行数）
- head 从文件头查看文本内容（n选项指定行数）
- more 分屏显示文本内容（enter显示下一行，space显示下一屏，b显示上一屏，q退出）、、
- less 类似more，但更方便
- diff 比较两个文件的内容
- wc 文本统计命令
- date查看日期时间命令
	修改日期时间命令date和clock（将当前时间写入硬件时钟）
- cal查看日历命令


- 联线用户命令
  - who 查看当前联线的用户
  - finger 查看登录到系统的用户及相关信息
  - w 查看正在使用系统的用户
	- who 主要用于一般性查看，finger侧重用户的个人详细信息，w输出用户使用系统的情况

>与联线用户通信的命令wall write mesg
wall广播所有用户
write私聊
mesg n拒绝消息

- 断开联线用户命令fuser



- su 临时切换用户命令

>sudo 以root权限执行命令


- which 搜索命令：从**环境变量**中搜索文件位置
- locate 文件搜索命令，更快搜索则需更新索引数据库（updatedb）
- whereis 特殊文件搜索命令
- apropos 关键字搜索命令

- 输入输出相关命令
  - echo 输出
  - read 接收用户输入命令
  - tee 显示并保存文本命令

>管道和输入输出重定向
command1 | command2 | command3 ...
先执行command1，并通过管道将输出结果传递给command2处理......
"""管道后面的命令总是使用前面的命令输出作为命令输入"""
重定向输出的操作符是 ">" ">>",表示将结果写入，追加到指定文件中
重定向输出的操作符是 "<" "<<",表示将结果输入，追加到指定文件中
错误重定向的操作符是 "2>>" "2>"
变量 **$?** 保存的是上一个命令的退出状态，数字0表示上一个命令执行成功，非零表示出现错误

- 邮件命令

>未配置互联网邮箱，期待ing

mail
格式：mail [option] [-s subject] [-c c_adress] [-b b_adress] user [-a file]....
常用选项：
	n：不读入设置文件/etc/mail.rc(这个文件允许用户使用外部地址而不是系统自带的sendmail发送邮件)。
	s：设置邮件的主题信息
	c：使用一个密件抄送列表
	b：使用一个抄送列表
用法事例：
	（1）发送邮件时，通常将邮件正文放入一个文件夹内，然后使用重定向的方式读取并发送文件中的内容。例如要将文件net_info中的内容发送给用户root和user1，并将邮件主题设为net info：
mail -s "net info" root,user1 <net_info

查看邮件
mail [option]
常用选项：
	h：查看邮件标题
	d：使用该命令加序号可以删除指定邮件
	f：查看光标指向的邮件
	n：跳转到指定序号的邮件
	q：退出并将已经阅读的邮件存入文件~/mbox中
	x：退出
	!：允许使用shell命令



- 启动新shell命令exec
格式：exec shell-command
exec执行时，会使用新的shell替代当前的shell，如果没有特别指明，exec将会在命令执行完毕后退出新启动的shell。在实际应用中，exec长用来处理文件描述符



## 字符

- 正则表达式

  - 双引号
	通常用来表示字符串，可用来屏蔽特殊字符
  - 单引号
	和双引号相似，单双交替使用
  - 反引号
	在字符串内表示命令
  - 美元符号
	引用变量，还可以用来置换一个命令，使用美元符号置换命令时，bash会将相应的命令放入子shell执行
  - 反斜线
	转义字符
  - 问号
	通配符，代表一个字符
  - 星号
	通配符，代表多个字符
  - []
	正则中的普通字符组
  - [!]
	排除字符组

>使用查找模式是，将其放入"//"中，然后放入命令
.通配符
\*重复
^行首匹配符
$行尾匹配符
[]普通字符组
[^]排除字符组
{m,n}量词



- 多条命令中的逻辑运算符


  - ||：逻辑或
	command1 || command2
	执行命令时，先执行1，若1成功，则跳过2，若1执行失败，则执行2

  - &&：逻辑与
	command1 && command2
	执行命令时，先执行1，若1成功，则执行2，若1执行失败，则跳过2

  - 括号
	提高命令的优先级



## 查找和筛选

- 查找工具`find`

  `find`的基本格式

    `find [path] [expression]`

  常用选项

    path：查找路径。未指定则为.

    expression：表达式，通常由 **选项、测试、动作** 三类构成

    选项用于指定find查找的目录、帮助等信息

    help

    depth 先在当前目录查找然后到当前子目录查找

    maxdepth LEVEL 向下搜索到第LEVEL层

    mindepth LEVEL

    mount 不搜索远程文件系统

    follow 遇到链接文件也检查链接指向的文件

    测试：使得 **输出** 更加详细的信息

    name 按文件名查找

    perm 按文件权限查找

    type 查找某一类型的文件

    mtime 按修改时间查找

    atime 按文件访问时间查找

    size  按文件大小查找

    User  按文件属主查找

    group 按文件属组查找

    nouser 查找没有属主的文件

    nogroup 查找没有属组的文件

    动作：指定如何查找和处理查找的文件

    prune 不在指定目录查找

    print查找到的文件输出到标准输出

    exec  对查找到的文件执行exec后附带的命令

    ok      对查找到的文件执行ok动作后的命令，执行前提问

  大多数情况下，`find`至少包含一个测试和一个动作


  例子：

  `/etc`目录下查找`smb.conf`

  `find /etc -name "smb.conf" -print`


  `/etc`目录下查找所有配置文件

  `find /etc -name "*.conf" -print`


  当前目录中查找名为`message`的文件

  `find -name "message" -print`


  `find -name "[a-z][a-z][0-9].d" -print`


  `&`后台执行

  `find / -name "*.conf" -print &`

  利用`find`查找到文件之后，可以用`exec`、`ok`后面紧跟要执行的Shell命令，再空一格后面试一格大括号“{}”，最后加上反斜杠“\\”和一个分号。

    `-exec [Shell命令] {} \;`

    `-ok [Shell命令] {} \;`

    xarg需要借助管道。


- 查找文本工具`grep`

  `grep`工具在文件中查找与字符串pattern匹配的内容，如果找到，则将整行输出到标准输出
  利用管道可以在输出结果中查找

- 转换和删除重复命令`tr`

  基本格式：

  `tr [options] [string1] [string2]`

  `string1`用于查询的字符串，`string2`用于转换查询到的字符串，tr命令不能读取文件，若要转换文件中的内容，可以用重定向输入输出和管道的方法


- 排序命令`sort`

  `sort`处理的文本可以来自文本文件，也可以来自标准输入和管道




## 用户和文件权限管理

#### 用户管理
  - 系统用户文件：`/etc/passwd`

    文件中每一行都是一个用户的信息，用:将各个字段分开

    第一个字段为 **用户名**

    第二个字段为 **用户登录密码**，x表示密码保存在`/etc/shadow`中

    第三个字段为 **用户ID号（UID）**

    第四个字段为 **用户所属组的ID号（GID）**

    第五个字段通常为空，保存其他信息

    第六个字段为 **用户家目录**

    第七个字段保存的是用户使用的Shell

  - 用户密码文件：`/etc/shadow`(影子文件)

    第一个字段为 **用户名**

    第二个字段为 **密码加密后的密文字符串** （$1$开头表示采用MD5加密）

    第三个字段为 **修改密码的天数** （从19700101算起）

    第四个字段表示 **两次修改密码之间的间隔天数**，0代表随时修改

    第五个字段表示密码最长存留天数（1表示用户不能改变密码）。

    第六个字段表示密码过期之前的警告天数（-1表示没有警告）

    第七个字段表示密码过期之后禁止用户登录的天数（1表示不会禁用）

    第八个字段表示过期后禁用的天数（-1表示不会禁用），以自19700101以来的天数表示

    最后一个字段为保留字段

  - 软件专有用户：保证安全性

  - 添加用户命令`useradd`

    命令格式：

    **`useradd [option] username`**

    常用选项：

        - g：指定用户所属用户组
        - s：指定用户使用的Shell

> - 编译安装软件时，有些软件要求建立软件专有用户，由于软件专有用户不能直接登录系统，要用s选项修改软件专有用户使用的Shell，例如使用useradd命令添加MySQL的专有用户：`useradd -s /sbin/nologin mysql`
- 根据安装的软件包不同，家目录中可能会存在一些别的初始化文件，初始化文件模板放在`/etc/skel/`


  - 设置用户密码命令`passwd`

    命令格式：

    **`passwd [username]`**

    若不指定用户，则修改当前用户的密码

  - 删除用户命令`userdel`

    命令格式：

    **`userdel [option] username`**

    常用选项：

    r：删除用户时，连同用户的家目录和邮件文件一起删除

  - 用户管理命令`usermod`

    命令格式：

    **`username [option] username`**

    常用选项：

      - L:锁定用户，即禁止用户登录系统
      - U：解除锁定
      - e：指定用户过期的日期
      - f：指定用户过期之后的缓冲天数，即过期之后还能登录的天数
      - d：为用户指定新的家目录
      - m：为用户指定新的家目录，移动原来家目录中的所有文件
      - s：修改用户默认Shell

> 也可以通过修改文件/etc/login.defs 的方式，修改用户的密码策略


#### 用户组管理

  - 用户组文件

    `/etc/group`:系统用户组文件

      第一个字段为用户组名

      第二个字段为组密码，为空说明不需要密码

      第三个字段为GID

      第四个字段为用户列表

    `/etc/gshadow`:用户组密码文件

      第一个字段为用户组名

      第二个字段为密码

      第三个字段为用户组管理员

      第四个字段为组成员列表

    `groupadd`

    `groupdel`

    `groupmod`


#### 基本权限及管理命令

  - 文件属主和属组

    ls -l 命令中第一个是属主，第二个是属组

    修改文件属主和属组的命令`chown`、`chgrp`

  - 文件权限和表示方法

    - 传统文件权限

      三类权限：读（r）、写（w）、执行（x）

    - 符号表示文件权限

      9个字符分为三组，每组3个字符

      第一组：属主权限位（u）

      第二组：属组权限位（g）

      第三组：其他用户权限（o）

    - 文件权限绝对模式

      1表示执行权限

      2表示写权限

      4表示读权限

      三者相加

    - 文件权限管理命令`chmod`

      命令格式：

      `chmod [option] [mode] file`

      常用选项：

        R递归修改目录及目录中所有文件权限

      mode可以拆分为操作对象、操作符、权限列表：

        操作对象：u、g、o、a

        操作符：+添加权限 -删除权限 =赋予权限

        权限列表：r、w、x的组合

        






>未完待续
